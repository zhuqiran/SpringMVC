<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!--注册SpringMVC框架的核心对象DispatcherServlet(中央调度器)-->
    <!--
        在服务器启动的时候，会找/WEB-INF/<servlet-name>-servlet.xml这个文件
        为什么要找这个文件呢？
            在DispatcherServlet这个Servlet的init方法中，会创建springmvc的容器对象WebApplicationContext，
            在创建容器对象时，会加载读取springmvc需要的配置文件，默认查找位置就是/WEB-INF/<servlet-name>-servlet.xml
        springmvc需要的配置文件，可以单独指定，只需要配置参数contextConfigLocation即可
    -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--配置contextConfigLocation参数，指定springmvc配置文件的位置和文件名称-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--在项目启动时创建该Servlet对象-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--
            url-pattern：表示指定该Servlet的资源路径。在springmvc项目中，只有将请求交给DispatcherServlet，这样的
            请求才能被springmvc框架处理。使用DispatcherServlet接收用户请求。
            框架中url-pattern的定义：
            1. 扩展名：*.xxx，xxx就是自定义的扩展名。比如*.do/*.action/*.mvc等等。注意不能使用*/jsp这类带有歧义的扩展名
            2. 使用斜杠"/"
        -->
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>














































</web-app>